version: '3.7'

services:
  app-server:
    container_name: backend
    image: backend-img
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - mongo
    environment:
      DB_MONGO_HOST: ${DB_MONGO_HOST}
      DB_MONGO_USERNAME: ${DB_MONGO_USERNAME}
      DB_MONGO_PASSWORD: ${DB_MONGO_PASSWORD}
      SECURITY_KEY: ${SECURITY_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: parte-y-reparte

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_MONGO_USERNAME}:${DB_MONGO_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongo
  redis:
    image: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    depends_on:
      - mongo-express
  frontend:
    container_name: frontend
    image: frontend-img
    build:
      context: src/main/ui
      dockerfile: Dockerfile
      args:
        - NEXTAUTH_SECRET=adsfasdfasdfasdf
        - NEXTAUTH_URL=http://${FRONT_URL:-host.docker.internal}:3000/
        - NEXT_PUBLIC_BACKEND_INTERNAL_URL=${BACKEND_URL:-host.docker.internal}
    ports:
      - "3000:3000"
    depends_on:
      - app-server
